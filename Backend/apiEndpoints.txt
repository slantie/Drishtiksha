API Endpoints DocumentationThis file lists all the available API endpoints for the application.Version Prefix: /api/v1Authentication (/auth)All routes in this module are prefixed with /api/v1/auth.Public RoutesThese endpoints do not require an authentication token.POST /signupDescription: Registers a new user.Body: { "email", "password", "firstName", "lastName" }Response: { "user": { ... }, "token": "..." }POST /loginDescription: Authenticates a user and returns a JWT.Body: { "email", "password" }Response: { "user": { ... }, "token": "..." }POST /logoutDescription: A placeholder for client-side token deletion.Response: { "message": "Logout successful" }Protected Auth RoutesThese endpoints require a valid Bearer token in the Authorization header.GET /profileDescription: Retrieves the profile of the currently authenticated user.Response: { "user": { ... } }PUT /profileDescription: Updates the profile information of the currently authenticated user.Body: { "firstName"?, "lastName"?, "bio"?, "phone"? }Response: { "user": { ... } }PUT /profile/passwordDescription: Updates the password for the currently authenticated user.Body: { "currentPassword", "newPassword", "confirmPassword" }Response: { "message": "Password updated successfully" }PUT /profile/avatarDescription: Updates the avatar URL for the currently authenticated user.Body: { "avatar": "https://url.to/image.png" }Response: { "user": { ... } }DELETE /profile/avatarDescription: Removes the avatar URL for the currently authenticated user.Response: { "user": { ... } }Video Management (/videos)All routes in this module are prefixed with /api/v1/videos and are protected. They require a valid Bearer token.POST /Description: Uploads a new video for processing. The request must be multipart/form-data.Form Fields: video (the video file), description (optional text).Response: { "video": { ... } }GET /Description: Retrieves a list of all videos for the authenticated user (or all videos if the user is an ADMIN).Response: [{ "video": { ... } }, ...]GET /:idDescription: Retrieves a single video by its unique ID, including its analysis results.Params: id (the video's UUID).Response: { "video": { ... } }PATCH /:idDescription: Updates a video's details, such as its filename or description.Params: id (the video's UUID).Body: { "description"?, "filename"? }Response: { "video": { ... } }DELETE /:idDescription: Deletes a video from the database and from Cloudinary.Params: id (the video's UUID).Response: { "message": "Video deleted successfully" }